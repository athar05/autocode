{
  "array of numbers": {
    "prefix": "create array of type numbers",
    "body": ["const ${1:arrayName}:number[] = [${2: 1},${3: 2},${4: 3}];"],
    "description": "Creates an array of type number"
  },
  "array of strings": {
    "prefix": "create array of type strings",
    "body": [
      "const ${1:arrayName}:string[] = [${2:'one'},${3:'two'},${4:'three'}; ]"
    ],
    "description": "Creates an array of type string"
  },
  "array of object": {
    "prefix": "create array of type object",
    "body": ["const ${1:arrayName}:{$2}[] = [${3:{}}];"],
    "description": "Creates an array of type object"
  },
  "variable of type string": {
    "prefix": "create variable of type string",
    "body": ["let  ${1:variableName}: string = \"$2\";"],
    "description": "Creates variable of type string"
  },
  "variable of type number": {
    "prefix": "create variable of type number",
    "body": ["let  ${1:variableName}: number = ${2:1};"],
    "description": "Creates variable of type number"
  },
  "variable of type boolean": {
    "prefix": "create variable of type boolean",
    "body": ["let  ${1:variableName}: boolean = ${2:false};"],
    "description": "Creates variable of type boolean"
  },
  "object": {
    "prefix": "create object",
    "body": ["const  ${1:objectName}:{} = $2{};"],
    "description": "Creates an object"
  },
  "named function": {
    "prefix": "create named function",
    "body": [
      "function ${1:functionName}(${2: params:type}) {",
      "$3",
      "return $4",
      "}"
    ],
    "description": "creates a named function"
  },
  "function expression": {
    "prefix": "create function expression",
    "body": [
      "const ${1:functionName} = function(${2: params:type}) {",
      "$3",
      "return $4",
      "}"
    ],
    "description": "Creates a function expression"
  },
  "arrow function": {
    "prefix": "create arrow function",
    "body": [
      "const ${1:functionName} = (${2: params:type})=> {",
      "$3",
      "return $4",
      "}"
    ],
    "description": "Creates an arrow function"
  },
  "async arrow function": {
    "prefix": "create async arrow function",
    "body": [
      "const ${1:functionName} = async(${2:params:type})=> {",
      "$3",
      "return $4",
      "}"
    ],
    "description": "Creates an async arrow function"
  },
  "async function": {
    "prefix": "create async function",
    "body": [
      "async function ${1:functionName}(${2:params:type}) {",
      "$3",
      "return $4",
      "}"
    ],
    "description": "Creats an async function"
  }
}
